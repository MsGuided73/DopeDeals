üß† System Audit Request
I‚Äôm conducting a full operational audit of this eCommerce system. Please analyze the codebase, route structure, and integrations to determine how the following flows are currently implemented:

üßæ Order Lifecycle Audit
Product Visibility

Where are product records being pulled from?

Is inventory information displayed to users pulled from Supabase, Zoho, or cached locally?

Cart + Checkout Flow

Where is cart state stored and validated?

Is there any inventory validation before allowing checkout?

Stock Availability Logic

Which system is treated as the source of truth for stock levels?

Does the app recheck inventory in Zoho before creating orders?

Order Creation

Who creates the official order record ‚Äî Supabase or Zoho?

Are any orders or order_items stored locally in Supabase?

Payment Processing (KajaPay)

Where is KajaPay integrated and triggered?

What happens upon successful payment?

Where is the transaction recorded?

Fulfillment & Shipping (ShipStation)

Who triggers shipment creation ‚Äî Zoho or our backend?

Are tracking numbers received via webhook or pulled manually?

Where is tracking info stored?

Inventory Updates

When and how is inventory reduced?

Does the system sync stock levels from Zoho regularly or via webhook?

Post-Order Updates

Are order status changes reflected across Supabase, Zoho, and ShipStation?

Are webhooks registered and processed correctly?

üîç Additional Areas to Check:
Is Supabase being used for user auth (supabase.auth) during checkout?

Are other storefronts or POS systems modifying shared inventory?

Is there any fraud scoring or logic before payment is triggered?

Are order returns or cancellations accounted for in the logic?

Is the app sending any notifications to users post-purchase?

Are taxes/shipping costs calculated client-side, via Zoho, or ShipStation?

üìã Deliverables:
A full summary of how each flow is handled

File names and routes involved (e.g. /api/checkout, /webhook/kajapay)

Any TODOs, placeholders, or unhandled edge cases

Recommendations for improvement or centralization via Supabase